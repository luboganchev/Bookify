// <auto-generated />
using System;
using Bookify.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookify.Infrastructure.Migrations
{
    [DbContext(typeof(BookifyDbContext))]
    partial class BookifyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookMerchant", b =>
                {
                    b.Property<Guid>("BooksId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MerchantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BooksId", "MerchantsId");

                    b.HasIndex("MerchantsId");

                    b.ToTable("BookMerchant");
                });

            modelBuilder.Entity("Bookify.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b81c7fb8-0e22-44a3-b3c9-bfb74866871a"),
                            DateOfBirth = new DateTime(1564, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "William Shakespeare",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b948bddf-e10c-4419-aab3-e5987007bbbf"),
                            FullName = "Charles Dickens",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("199ba95a-78a2-4daf-99a6-dea956165284"),
                            FullName = "Fyodor Dostoevsky",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("bc92a660-649b-4c37-88c2-f0458d261013"),
                            FullName = "Ernest Hemingway",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("cb6d2d87-dcd5-4cb5-be2b-483482c0d76e"),
                            DateOfBirth = new DateTime(1848, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Hristo Botev",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Bookify.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PagesCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Bookify.Entities.Merchant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateFounded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Merchants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3175c19-39e1-4936-bb84-ad85abbeece4"),
                            DateFounded = new DateTime(1994, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Amazon"
                        },
                        new
                        {
                            Id = new Guid("b5b03ff8-b9d7-42f1-94a3-c35bfd94126d"),
                            DateFounded = new DateTime(2008, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Ozone"
                        },
                        new
                        {
                            Id = new Guid("76058411-1087-4bdf-90cc-b78921052b6d"),
                            DateFounded = new DateTime(1971, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Powell's Books"
                        });
                });

            modelBuilder.Entity("BookMerchant", b =>
                {
                    b.HasOne("Bookify.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bookify.Entities.Merchant", null)
                        .WithMany()
                        .HasForeignKey("MerchantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bookify.Entities.Book", b =>
                {
                    b.HasOne("Bookify.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
